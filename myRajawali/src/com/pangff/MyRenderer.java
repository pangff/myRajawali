package com.pangff;import java.util.ArrayList;import java.util.List;import rajawali.Object3D;import rajawali.animation.Animation3D;import rajawali.animation.Animation3D.RepeatMode;import rajawali.animation.EllipticalOrbitAnimation3D;import rajawali.animation.EllipticalOrbitAnimation3D.OrbitDirection;import rajawali.animation.RotateAnimation3D;import rajawali.animation.TranslateAnimation3D;import rajawali.lights.PointLight;import rajawali.materials.Material;import rajawali.materials.textures.ATexture.TextureException;import rajawali.materials.textures.Texture;import rajawali.math.vector.Vector3;import rajawali.math.vector.Vector3.Axis;import rajawali.parser.LoaderOBJ;import rajawali.primitives.Plane;import rajawali.primitives.Sphere;import rajawali.renderer.RajawaliRenderer;import android.content.Context;import android.util.Log;public class MyRenderer extends RajawaliRenderer {	private List<Object3D> loaderOBJList = new ArrayList<Object3D>();	private List<Animation3D> mCameraAnimList = new ArrayList<Animation3D>();	private PointLight mLight, mLight2;	private Animation3D mLightAnim;	public MyRenderer(Context context) {		super(context);	}	protected void initScene() {		//		DirectionalLight light = new DirectionalLight(0, -.6f, .4f);//		light.setPower(1);//		getCurrentScene().addLight(light);				mLight = new PointLight();		mLight.setPosition(-1, 1, 4);		mLight.setPower(2);		mLight2 = new PointLight();		mLight2.setPosition(-1, 1, 4);		mLight2.setPower(2);		getCurrentScene().addLight(mLight);		getCurrentScene().addLight(mLight2);		getCurrentCamera().setZ(5);		getCurrentCamera().setY(1);		getCurrentCamera().setFarPlane(1000);				Object3D  mSphere;		Object3D  ground;		LoaderOBJ objParser = new LoaderOBJ(mContext.getResources(),mTextureManager, R.raw.bg_obj);		Object3D mObjectGroup_origin = null;		try {						ground = new Plane(5, 1.5f, 50, 50);			Material material = new Material();			try {				material.addTexture(new Texture("checkerboard", R.drawable.ground));			} catch (TextureException e) {				e.printStackTrace();			}			ground.setMaterial(material);			ground.setDoubleSided(true);			ground.setZ(1);			ground.setRotX(45);			//ground.setRotY(-45);			addChild(ground);									objParser.parse();			mObjectGroup_origin = objParser.getParsedObject();			mObjectGroup_origin.setPosition(0,0,2);			addChild(mObjectGroup_origin);			loaderOBJList.add(mObjectGroup_origin);									mSphere = new Sphere(400, 8, 8);			Material sphereMaterial = new Material();			try {				sphereMaterial.addTexture(new Texture("skySphere", R.drawable.skysphere));			} catch (TextureException e1) {				e1.printStackTrace();			}			mSphere.setMaterial(sphereMaterial);			mSphere.setDoubleSided(true);			mSphere.setZ(2);			addChild(mSphere);															for(int i=0;i<0;i++){				Log.e("R", "FFFFFFFFFFFFFFFFFFF");				Object3D mObjectGroup = mObjectGroup_origin.clone();			    loaderOBJList.add(mObjectGroup);			}						for(int i=0;i<loaderOBJList.size();i++){				Log.e("R", "DDDDDDDDDDDDDDDDDDDD"+loaderOBJList.get(i).hashCode());				if(i>0){					loaderOBJList.get(i).setPosition(-2+0.1*i,2-0.1*i, 2);					addChild(loaderOBJList.get(i));				}								Animation3D mCameraAnim = new RotateAnimation3D(Axis.X, -270);				mCameraAnim.setDuration(10);				mCameraAnim.setRepeatMode(RepeatMode.NONE);				mCameraAnim.setTransformable3D(loaderOBJList.get(i));				Animation3D mCameraAnim2 = new RotateAnimation3D(Axis.Z, 360);				mCameraAnim2.setDuration(8000);				mCameraAnim2.setRepeatMode(RepeatMode.INFINITE);				mCameraAnim2.setTransformable3D(loaderOBJList.get(i));								mCameraAnimList.add(mCameraAnim);				mCameraAnimList.add(mCameraAnim2);			}					} catch (Exception e) {			e.printStackTrace();		}		mLightAnim = new EllipticalOrbitAnimation3D(new Vector3(), new Vector3(				0, 10, 0), Vector3.getAxisVector(Axis.Z), 0, 360,				OrbitDirection.CLOCKWISE);		mLightAnim.setDuration(3000);		mLightAnim.setRepeatMode(RepeatMode.INFINITE);		mLightAnim.setTransformable3D(mLight);		Animation3D anim = new TranslateAnimation3D(new Vector3(-10, -10, 5),				new Vector3(-10, 10, 5));		anim.setDuration(4000);		anim.setRepeatMode(RepeatMode.REVERSE_INFINITE);		anim.setTransformable3D(mLight2);		registerAnimation(anim);		for(int i=0;i<mCameraAnimList.size();i++){			registerAnimation(mCameraAnimList.get(i));		}				anim.play();		for(int i=0;i<mCameraAnimList.size();i++){			mCameraAnimList.get(i).play();		}		mLightAnim.play();				// -- tell the camera which object to chase		// -- set the far plane to 1000 so that we actually see the sky sphere			}}